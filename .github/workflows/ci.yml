on: push

jobs:
  check:
    runs-on: ubuntu-latest
    container: leshiy1295/gcc_linters_valgrind_cmake_gtest
    steps:
      - uses: actions/checkout@v2
      - run: apt install -y clang-format
      - run: cmake -B build
      - run: make -C build check

  build:
    runs-on: ubuntu-latest
    container: leshiy1295/gcc_linters_valgrind_cmake_gtest
    needs: [check]
    steps:
    - uses: actions/checkout@v2
    - run: cmake -B build -DLINTERS=OFF -DWITH_MEMCHECK=OFF
    - run: make -C build

  buildcheck:
    runs-on: ubuntu-latest
    container: leshiy1295/gcc_linters_valgrind_cmake_gtest
    needs: [build]
    steps:
    - uses: actions/checkout@v2
    - run: apt install -y clang-tools
    - run: cmake -B build -DLINTERS=OFF -DWITH_MEMCHECK=OFF
    - run: scan-build make -C build

  test:
    runs-on: ubuntu-latest
    container: leshiy1295/gcc_linters_valgrind_cmake_gtest
    needs: [buildcheck]
    steps:
    - name: Fetch
      uses: actions/checkout@master
      with:
          submodules: recursive
    - name: Test
      run: |
        cmake -B build -DTESTING=ON -DCOVERAGE=ON
        make -C build test
        apt-get install -y gcovr
        gcovr -x -o ./build/coverage_report.xml
    - name: Upload
      uses: codecov/codecov-action@v2
      with:
        token: ${{ secrets.CODECOV_TOKEN }}
        files: coverage_report.xml
        

  sanitizers:
    runs-on: ubuntu-latest
    container: leshiy1295/gcc_linters_valgrind_cmake_gtest
    needs: [test]
    steps:
      - uses: actions/checkout@v2
      - run: cmake -B build -DSANITIZERS=ON -DTESTING=ON
      - run: make -C build test

  memtest:
    runs-on: ubuntu-latest
    container: leshiy1295/gcc_linters_valgrind_cmake_gtest
    needs: [sanitizers]
    steps:
      - uses: actions/checkout@v2
      - run: cmake -B build
      - run: make -C build memcheck

